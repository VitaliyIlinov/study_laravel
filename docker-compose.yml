version: '3'
#https://www.digitalocean.com/community/tutorials/how-to-containerize-a-laravel-application-for-development-with-docker-compose-on-ubuntu-18-04-ru
services:
  #PHP Service
  app:
    build:
      context: ./docker
      dockerfile: Dockerfile
      args:
        UID: '${CURRENT_UID}'
        GID: '${CURRENT_GID}'
    image: '${APP_NAME}'
    restart: unless-stopped
    container_name: app
    # current user id and group id
    user: '${CURRENT_UID}:${CURRENT_GID}'
    volumes:
      - './:/var/www'
      - './storage/logs/php:/var/log/php'
      - './docker/configs/php/conf.d:/usr/local/etc/php/conf.d'
    #      - ./docker/php-fpm/pool.d/www.conf:/usr/local/etc/php-fpm.d/custom.conf
    env_file:
      - docker-compose.env
    networks:
      - app-network

  #Nginx Service https://hub.docker.com/_/nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - '${APP_PORT:-80}:80'
      - '${APP_PORT_SSL:-443}:443'
    volumes:
      - './:/var/www'
      - './storage/logs/nginx:/var/log/nginx'
      - './docker/configs/nginx/conf.d/:/etc/nginx/conf.d/'
    networks:
      - app-network

  #MySQL Service https://hub.docker.com/_/mysql
  db:
    image: mysql:8.0.12
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    ports:
      - '${FORWARD_DB_PORT:-3307}:3306'
    volumes:
      - 'study:/var/lib/mysql'
      - './storage/logs/mysql:/var/log/mysql:rw'
      - './docker/configs/mysql/conf.d:/etc/mysql/conf.d'
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
volumes:
  db:
    driver: local
