version: '3'
#https://www.digitalocean.com/community/tutorials/how-to-containerize-a-laravel-application-for-development-with-docker-compose-on-ubuntu-18-04-ru
services:
  #PHP Service
  app:
    build:
      context: ./docker
      dockerfile: Dockerfile
    image: ${APP_NAME}
    container_name: app
    working_dir: /var/www
    # current user id and group id
    user: ${CURRENT_UID}
    volumes:
      - ./:/var/www
      - ./storage/logs/php:/var/log/php
      - ./docker/configs/php/conf.d:/usr/local/etc/php/conf.d
    #      - ./docker/php-fpm/pool.d/www.conf:/usr/local/etc/php-fpm.d/custom.conf
    env_file:
      - docker-compose.env
    networks:
      - app-network

  #Nginx Service https://hub.docker.com/_/nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "81:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./storage/logs/nginx:/var/log/nginx
      - ./docker/configs/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service https://hub.docker.com/_/mysql
  db:
    image: mysql:8.0.12
    container_name: db
    restart: unless-stopped
    environment:
      #from .env load configs
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    ports:
      - "3307:3306"
    volumes:
      - ./storage/mysql:/var/lib/mysql
      - ./storage/logs/mysql:/var/log/mysql
      - ./docker/configs/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
